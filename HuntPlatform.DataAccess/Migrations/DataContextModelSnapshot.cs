// <auto-generated />
using System;
using HuntPlatform.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HuntPlatform.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HuntPlatform.Domain.Aggregates.Vacancies.Vacancy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_creation");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("edited_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric")
                        .HasColumnName("salary");

                    b.Property<byte>("WorkExperience")
                        .HasColumnType("smallint")
                        .HasColumnName("work_experience");

                    b.HasKey("Id")
                        .HasName("pk_vacancies");

                    b.ToTable("vacancies", (string)null);
                });

            modelBuilder.Entity("HuntPlatform.Domain.Aggregates.Vacancies.Vacancy", b =>
                {
                    b.OwnsOne("HuntPlatform.Domain.Aggregates.Vacancies.Region", "Region", b1 =>
                        {
                            b1.Property<Guid>("VacancyId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("RegionName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("region_region_name");

                            b1.HasKey("VacancyId");

                            b1.ToTable("vacancies");

                            b1.WithOwner()
                                .HasForeignKey("VacancyId")
                                .HasConstraintName("fk_vacancies_vacancies_id");
                        });

                    b.OwnsOne("HuntPlatform.Domain.Aggregates.Vacancies.WorkFormat", "WorkFormat", b1 =>
                        {
                            b1.Property<Guid>("VacancyId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Id")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("work_format");

                            b1.HasKey("VacancyId");

                            b1.ToTable("vacancies");

                            b1.WithOwner()
                                .HasForeignKey("VacancyId")
                                .HasConstraintName("fk_vacancies_vacancies_id");
                        });

                    b.Navigation("Region")
                        .IsRequired();

                    b.Navigation("WorkFormat")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
